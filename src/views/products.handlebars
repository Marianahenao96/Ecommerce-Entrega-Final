<div class="container">
  <div class="page-header">
    <h1>{{title}}</h1>
    <a href="/products/view/add" class="btn btn-primary">
      ‚ûï Agregar Producto
    </a>
  </div>

  <!-- Filtros y controles -->
  <div class="controls">
    <form method="GET" action="/products" class="filter-form">
      <div class="filter-group">
        <label for="query">Filtrar por:</label>
        <select name="query" id="query">
          <option value="">Todos los productos</option>
          <option value="available" {{#if (eq query "available")}}selected{{/if}}>Disponibles</option>
          <option value="electronics" {{#if (eq query "electronics")}}selected{{/if}}>Electr√≥nicos</option>
          <option value="clothing" {{#if (eq query "clothing")}}selected{{/if}}>Ropa</option>
          <option value="books" {{#if (eq query "books")}}selected{{/if}}>Libros</option>
          <option value="home" {{#if (eq query "home")}}selected{{/if}}>Hogar</option>
          <option value="sports" {{#if (eq query "sports")}}selected{{/if}}>Deportes</option>
          <option value="beauty" {{#if (eq query "beauty")}}selected{{/if}}>Belleza</option>
          <option value="toys" {{#if (eq query "toys")}}selected{{/if}}>Juguetes</option>
          <option value="automotive" {{#if (eq query "automotive")}}selected{{/if}}>Automotriz</option>
          <option value="other" {{#if (eq query "other")}}selected{{/if}}>Otros</option>
        </select>
      </div>

      <div class="filter-group">
        <label for="sort">Ordenar por precio:</label>
        <select name="sort" id="sort">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if (eq sort "asc")}}selected{{/if}}>Menor a mayor</option>
          <option value="desc" {{#if (eq sort "desc")}}selected{{/if}}>Mayor a menor</option>
        </select>
      </div>

      <div class="filter-group">
        <label for="limit">Productos por p√°gina:</label>
        <select name="limit" id="limit">
          <option value="5" {{#if (eq limit "5")}}selected{{/if}}>5</option>
          <option value="10" {{#if (eq limit "10")}}selected{{/if}}>10</option>
          <option value="20" {{#if (eq limit "20")}}selected{{/if}}>20</option>
        </select>
      </div>

      <button type="submit">üîç Aplicar filtros</button>
    </form>
  </div>

  <!-- Informaci√≥n de paginaci√≥n -->
  <div class="pagination-info">
    <p>P√°gina {{page}} de {{totalPages}} | Total de productos: {{payload.length}}</p>
  </div>

  <!-- Grid de productos -->
  <div class="product-grid">
    {{#each products}}
      <div class="product-card">
        {{#if this.thumbnails.[0]}}
          <img src="{{this.thumbnails.[0]}}" alt="{{this.title}}" class="product-image">
        {{else}}
          <div class="no-image">üì¶ Sin imagen</div>
        {{/if}}
        
        <h2>{{this.title}}</h2>
        <p class="description">{{this.description}}</p>
        <p class="price"><strong>${{this.price}}</strong></p>
        <p class="stock">Stock: {{this.stock}}</p>
        <p class="category">Categor√≠a: {{this.category}}</p>

        <div class="product-actions">
          <a href="/products/{{this._id}}" class="btn btn-primary">üëÅÔ∏è Ver detalles</a>
          
          {{#if cartId}}
            <form action="/api/carts/{{cartId}}/products/{{this._id}}" method="POST" class="add-to-cart-form">
              <button type="submit" class="btn btn-success">üõí Agregar al carrito</button>
            </form>
          {{/if}}

          <button 
            type="button" 
            class="btn btn-danger delete-btn" 
            data-product-id="{{this._id}}" 
            data-product-title="{{this.title}}"
            onclick="deleteProduct('{{this._id}}', '{{this.title}}')"
          >
            üóëÔ∏è Eliminar
          </button>
        </div>
      </div>
    {{else}}
      <div class="no-products">
        <p>üò¢ No hay productos disponibles</p>
      </div>
    {{/each}}
  </div>

  <!-- Navegaci√≥n de paginaci√≥n -->
  <div class="pagination">
    {{#if hasPrevPage}}
      <a href="/products{{prevLink}}" class="btn btn-secondary">‚¨ÖÔ∏è Anterior</a>
    {{/if}}

    <span class="page-numbers">
      {{#if hasPrevPage}}
        <a href="/products?page={{prevPage}}&limit={{limit}}&sort={{sort}}&query={{query}}" class="page-link">{{prevPage}}</a>
      {{/if}}
      
      <span class="current-page">{{page}}</span>
      
      {{#if hasNextPage}}
        <a href="/products?page={{nextPage}}&limit={{limit}}&sort={{sort}}&query={{query}}" class="page-link">{{nextPage}}</a>
      {{/if}}
    </span>

    {{#if hasNextPage}}
      <a href="/products{{nextLink}}" class="btn btn-secondary">Siguiente ‚û°Ô∏è</a>
    {{/if}}
  </div>
</div>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-bottom: 2px solid #e9ecef;
  }

  .page-header h1 {
    margin: 0;
    color: #333;
    font-size: 32px;
  }

  .controls {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
  }

  .filter-form {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
    align-items: end;
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .filter-group label {
    font-weight: bold;
    font-size: 14px;
  }

  .filter-group select {
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
  }

  .pagination-info {
    text-align: center;
    margin: 20px 0;
    color: #666;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
  }

  .product-card {
    border: 1px solid #e0e0e0;
    padding: 20px;
    border-radius: 12px;
    background-color: #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .product-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }

  .product-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 15px;
  }

  .no-image {
    width: 100%;
    height: 200px;
    background: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    margin-bottom: 15px;
    font-size: 24px;
  }

  .product-card h2 {
    margin: 0 0 10px 0;
    color: #333;
    font-size: 18px;
  }

  .description {
    color: #666;
    margin-bottom: 10px;
    font-size: 14px;
    line-height: 1.4;
  }

  .price {
    font-size: 20px;
    color: #28a745;
    margin: 10px 0;
  }

  .stock {
    color: #666;
    font-size: 14px;
    margin: 5px 0;
  }

  .category {
    color: #007bff;
    font-size: 12px;
    text-transform: uppercase;
    margin: 5px 0 15px 0;
  }

  .product-actions {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }

  .btn {
    padding: 8px 16px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    font-size: 14px;
    transition: background-color 0.2s;
  }

  .btn-primary {
    background: #007bff;
    color: white;
  }

  .btn-primary:hover {
    background: #0056b3;
  }

  .btn-success {
    background: #28a745;
    color: white;
  }

  .btn-success:hover {
    background: #218838;
  }

  .btn-secondary {
    background: #6c757d;
    color: white;
  }

  .btn-secondary:hover {
    background: #545b62;
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-top: 30px;
  }

  .page-numbers {
    display: flex;
    gap: 5px;
    align-items: center;
  }

  .page-link {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    text-decoration: none;
    color: #007bff;
  }

  .page-link:hover {
    background: #f8f9fa;
  }

  .current-page {
    padding: 8px 12px;
    background: #007bff;
    color: white;
    border-radius: 4px;
    font-weight: bold;
  }

  .no-products {
    text-align: center;
    padding: 40px;
    color: #666;
    font-size: 18px;
  }

  .add-to-cart-form {
    flex: 1;
  }

  .btn-danger {
    background: #dc3545;
    color: white;
  }

  .btn-danger:hover {
    background: #c82333;
    transform: translateY(-1px);
  }

  .delete-product-form {
    margin: 0;
  }

  @media (max-width: 768px) {
    .page-header {
      flex-direction: column;
      gap: 15px;
      text-align: center;
    }

    .page-header h1 {
      font-size: 24px;
    }

    .filter-form {
      flex-direction: column;
      align-items: stretch;
    }

    .filter-group {
      width: 100%;
    }

    .pagination {
      flex-direction: column;
      gap: 15px;
    }

    .product-actions {
      flex-direction: column;
      gap: 8px;
    }

    .delete-product-form {
      width: 100%;
    }

    .delete-product-form button {
      width: 100%;
    }
  }
</style>

<script>
  async function deleteProduct(productId, productTitle) {
    // Confirmar eliminaci√≥n
    const confirmed = confirm(`¬øEst√°s seguro de que quieres eliminar el producto "${productTitle}"?\n\nEsta acci√≥n no se puede deshacer.`);
    
    if (!confirmed) {
      return;
    }

    // Encontrar el elemento del producto
    const productElement = document.querySelector(`[data-product-id="${productId}"]`).closest('.product-card');
    const deleteBtn = document.querySelector(`[data-product-id="${productId}"]`);
    
    // Mostrar estado de carga
    deleteBtn.disabled = true;
    deleteBtn.innerHTML = '‚è≥ Eliminando...';
    productElement.style.opacity = '0.6';
    productElement.style.pointerEvents = 'none';

    try {
      // Realizar petici√≥n AJAX
      const response = await fetch(`/products/api/${productId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const result = await response.json();

      if (response.ok && result.status === 'success') {
        // Eliminar elemento del DOM con animaci√≥n
        productElement.style.transition = 'all 0.3s ease-out';
        productElement.style.transform = 'scale(0.8)';
        productElement.style.opacity = '0';
        
        setTimeout(() => {
          productElement.remove();
          
          // Verificar si no quedan productos
          const remainingProducts = document.querySelectorAll('.product-card');
          if (remainingProducts.length === 0) {
            showNoProductsMessage();
          }
          
          // Actualizar contador de productos
          updateProductCount();
          
          // Mostrar mensaje de √©xito
          showSuccessMessage(`Producto "${productTitle}" eliminado exitosamente`);
        }, 300);
        
      } else {
        // Mostrar error
        showErrorMessage(result.message || 'Error al eliminar el producto');
        
        // Restaurar bot√≥n
        deleteBtn.disabled = false;
        deleteBtn.innerHTML = 'üóëÔ∏è Eliminar';
        productElement.style.opacity = '1';
        productElement.style.pointerEvents = 'auto';
      }
      
    } catch (error) {
      console.error('Error:', error);
      showErrorMessage('Error de conexi√≥n. Intenta nuevamente.');
      
      // Restaurar bot√≥n
      deleteBtn.disabled = false;
      deleteBtn.innerHTML = 'üóëÔ∏è Eliminar';
      productElement.style.opacity = '1';
      productElement.style.pointerEvents = 'auto';
    }
  }

  function showNoProductsMessage() {
    const productGrid = document.querySelector('.product-grid');
    productGrid.innerHTML = `
      <div class="no-products">
        <p>üò¢ No hay productos disponibles</p>
        <a href="/products/view/add" class="btn btn-primary">‚ûï Agregar Producto</a>
      </div>
    `;
  }

  function updateProductCount() {
    const productCount = document.querySelectorAll('.product-card').length;
    const paginationInfo = document.querySelector('.pagination-info p');
    if (paginationInfo) {
      paginationInfo.textContent = `Total de productos: ${productCount}`;
    }
  }

  function showSuccessMessage(message) {
    showNotification(message, 'success');
  }

  function showErrorMessage(message) {
    showNotification(message, 'error');
  }

  function showNotification(message, type) {
    // Crear elemento de notificaci√≥n
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
      <span>${message}</span>
      <button onclick="this.parentElement.remove()" class="close-btn">&times;</button>
    `;
    
    // Agregar estilos
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 15px 20px;
      border-radius: 8px;
      color: white;
      font-weight: 500;
      z-index: 1000;
      display: flex;
      align-items: center;
      gap: 10px;
      max-width: 400px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      animation: slideIn 0.3s ease-out;
    `;
    
    if (type === 'success') {
      notification.style.background = '#28a745';
    } else {
      notification.style.background = '#dc3545';
    }
    
    // Agregar al DOM
    document.body.appendChild(notification);
    
    // Auto-remover despu√©s de 4 segundos
    setTimeout(() => {
      if (notification.parentElement) {
        notification.style.animation = 'slideOut 0.3s ease-out';
        setTimeout(() => notification.remove(), 300);
      }
    }, 4000);
  }

  // Agregar animaciones CSS
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideIn {
      from {
        transform: translateX(100%);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }
    
    @keyframes slideOut {
      from {
        transform: translateX(0);
        opacity: 1;
      }
      to {
        transform: translateX(100%);
        opacity: 0;
      }
    }
    
    .close-btn {
      background: none;
      border: none;
      color: white;
      font-size: 18px;
      cursor: pointer;
      padding: 0;
      margin-left: auto;
    }
    
    .close-btn:hover {
      opacity: 0.8;
    }
  `;
  document.head.appendChild(style);
</script>
